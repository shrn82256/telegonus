<?php
namespace PackageInfo;

use DateTime;
use DateTimeZone;
use PackageInfo\Exception\PackageNotInstalledException;

/**
 * This class is generated by ocramius/package-versions, specifically by
 * @see \PackageVersions\Installer
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 */
final class Package
{
    const PACKAGES = array (
  'guzzlehttp/guzzle' => 
  array (
    'name' => 'guzzlehttp/guzzle',
    'version' => '6.3.3',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/guzzle/guzzle.git',
      'reference' => '407b0cb880ace85c9b63c5f9551db498cb2d50ba',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/guzzle/guzzle/zipball/407b0cb880ace85c9b63c5f9551db498cb2d50ba',
      'reference' => '407b0cb880ace85c9b63c5f9551db498cb2d50ba',
      'shasum' => '',
    ),
    'require' => 
    array (
      'guzzlehttp/promises' => '^1.0',
      'guzzlehttp/psr7' => '^1.4',
      'php' => '>=5.5',
    ),
    'require-dev' => 
    array (
      'ext-curl' => '*',
      'phpunit/phpunit' => '^4.8.35 || ^5.7 || ^6.4 || ^7.0',
      'psr/log' => '^1.0',
    ),
    'suggest' => 
    array (
      'psr/log' => 'Required for using the Log middleware',
    ),
    'type' => 'library',
    'extra' => 
    array (
      'branch-alias' => 
      array (
        'dev-master' => '6.3-dev',
      ),
    ),
    'autoload' => 
    array (
      'files' => 
      array (
        0 => 'src/functions_include.php',
      ),
      'psr-4' => 
      array (
        'GuzzleHttp\\' => 'src/',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'Michael Dowling',
        'email' => 'mtdowling@gmail.com',
        'homepage' => 'https://github.com/mtdowling',
      ),
    ),
    'description' => 'Guzzle is a PHP HTTP client library',
    'homepage' => 'http://guzzlephp.org/',
    'keywords' => 
    array (
      0 => 'client',
      1 => 'curl',
      2 => 'framework',
      3 => 'http',
      4 => 'http client',
      5 => 'rest',
      6 => 'web service',
    ),
    'time' => '2018-04-22T15:46:56+00:00',
  ),
  'guzzlehttp/promises' => 
  array (
    'name' => 'guzzlehttp/promises',
    'version' => 'v1.3.1',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/guzzle/promises.git',
      'reference' => 'a59da6cf61d80060647ff4d3eb2c03a2bc694646',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/guzzle/promises/zipball/a59da6cf61d80060647ff4d3eb2c03a2bc694646',
      'reference' => 'a59da6cf61d80060647ff4d3eb2c03a2bc694646',
      'shasum' => '',
    ),
    'require' => 
    array (
      'php' => '>=5.5.0',
    ),
    'require-dev' => 
    array (
      'phpunit/phpunit' => '^4.0',
    ),
    'type' => 'library',
    'extra' => 
    array (
      'branch-alias' => 
      array (
        'dev-master' => '1.4-dev',
      ),
    ),
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'GuzzleHttp\\Promise\\' => 'src/',
      ),
      'files' => 
      array (
        0 => 'src/functions_include.php',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'Michael Dowling',
        'email' => 'mtdowling@gmail.com',
        'homepage' => 'https://github.com/mtdowling',
      ),
    ),
    'description' => 'Guzzle promises library',
    'keywords' => 
    array (
      0 => 'promise',
    ),
    'time' => '2016-12-20T10:07:11+00:00',
  ),
  'guzzlehttp/psr7' => 
  array (
    'name' => 'guzzlehttp/psr7',
    'version' => '1.4.2',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/guzzle/psr7.git',
      'reference' => 'f5b8a8512e2b58b0071a7280e39f14f72e05d87c',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/guzzle/psr7/zipball/f5b8a8512e2b58b0071a7280e39f14f72e05d87c',
      'reference' => 'f5b8a8512e2b58b0071a7280e39f14f72e05d87c',
      'shasum' => '',
    ),
    'require' => 
    array (
      'php' => '>=5.4.0',
      'psr/http-message' => '~1.0',
    ),
    'provide' => 
    array (
      'psr/http-message-implementation' => '1.0',
    ),
    'require-dev' => 
    array (
      'phpunit/phpunit' => '~4.0',
    ),
    'type' => 'library',
    'extra' => 
    array (
      'branch-alias' => 
      array (
        'dev-master' => '1.4-dev',
      ),
    ),
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'GuzzleHttp\\Psr7\\' => 'src/',
      ),
      'files' => 
      array (
        0 => 'src/functions_include.php',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'Michael Dowling',
        'email' => 'mtdowling@gmail.com',
        'homepage' => 'https://github.com/mtdowling',
      ),
      1 => 
      array (
        'name' => 'Tobias Schultze',
        'homepage' => 'https://github.com/Tobion',
      ),
    ),
    'description' => 'PSR-7 message implementation that also provides common utility methods',
    'keywords' => 
    array (
      0 => 'http',
      1 => 'message',
      2 => 'request',
      3 => 'response',
      4 => 'stream',
      5 => 'uri',
      6 => 'url',
    ),
    'time' => '2017-03-20T17:10:46+00:00',
  ),
  'psr/cache' => 
  array (
    'name' => 'psr/cache',
    'version' => '1.0.1',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/php-fig/cache.git',
      'reference' => 'd11b50ad223250cf17b86e38383413f5a6764bf8',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/php-fig/cache/zipball/d11b50ad223250cf17b86e38383413f5a6764bf8',
      'reference' => 'd11b50ad223250cf17b86e38383413f5a6764bf8',
      'shasum' => '',
    ),
    'require' => 
    array (
      'php' => '>=5.3.0',
    ),
    'type' => 'library',
    'extra' => 
    array (
      'branch-alias' => 
      array (
        'dev-master' => '1.0.x-dev',
      ),
    ),
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'Psr\\Cache\\' => 'src/',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'PHP-FIG',
        'homepage' => 'http://www.php-fig.org/',
      ),
    ),
    'description' => 'Common interface for caching libraries',
    'keywords' => 
    array (
      0 => 'cache',
      1 => 'psr',
      2 => 'psr-6',
    ),
    'time' => '2016-08-06T20:24:11+00:00',
  ),
  'psr/http-message' => 
  array (
    'name' => 'psr/http-message',
    'version' => '1.0.1',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/php-fig/http-message.git',
      'reference' => 'f6561bf28d520154e4b0ec72be95418abe6d9363',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363',
      'reference' => 'f6561bf28d520154e4b0ec72be95418abe6d9363',
      'shasum' => '',
    ),
    'require' => 
    array (
      'php' => '>=5.3.0',
    ),
    'type' => 'library',
    'extra' => 
    array (
      'branch-alias' => 
      array (
        'dev-master' => '1.0.x-dev',
      ),
    ),
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'Psr\\Http\\Message\\' => 'src/',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'PHP-FIG',
        'homepage' => 'http://www.php-fig.org/',
      ),
    ),
    'description' => 'Common interface for HTTP messages',
    'homepage' => 'https://github.com/php-fig/http-message',
    'keywords' => 
    array (
      0 => 'http',
      1 => 'http-message',
      2 => 'psr',
      3 => 'psr-7',
      4 => 'request',
      5 => 'response',
    ),
    'time' => '2016-08-06T14:39:51+00:00',
  ),
  'thadafinser/package-info' => 
  array (
    'name' => 'thadafinser/package-info',
    'version' => 'v1.0.0',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/ThaDafinser/PackageInfo.git',
      'reference' => '3cc580385cf694ba83eda3bbf7ea716a2253ea5a',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/ThaDafinser/PackageInfo/zipball/3cc580385cf694ba83eda3bbf7ea716a2253ea5a',
      'reference' => '3cc580385cf694ba83eda3bbf7ea716a2253ea5a',
      'shasum' => '',
    ),
    'require' => 
    array (
      'composer-plugin-api' => '^1.0',
      'php' => '~5.6|~7.0',
    ),
    'require-dev' => 
    array (
      'composer/composer' => '^1.2.0',
      'phpunit/phpunit' => '^5.4.7',
    ),
    'type' => 'composer-plugin',
    'extra' => 
    array (
      'class' => 'PackageInfo\\Installer',
    ),
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'PackageInfo\\' => 'src',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'ThaDafinser',
        'email' => 'martin.keckeis1@gmail.com',
      ),
    ),
    'description' => 'Composer plugin that provides efficient querying for installed package versions (no runtime IO)',
    'time' => '2016-08-09T11:14:48+00:00',
  ),
  'thadafinser/user-agent-parser' => 
  array (
    'name' => 'thadafinser/user-agent-parser',
    'version' => 'v2.0.0',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/ThaDafinser/UserAgentParser.git',
      'reference' => '15d45577cb5b0f45cddd638e25d17da430084347',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/ThaDafinser/UserAgentParser/zipball/15d45577cb5b0f45cddd638e25d17da430084347',
      'reference' => '15d45577cb5b0f45cddd638e25d17da430084347',
      'shasum' => '',
    ),
    'require' => 
    array (
      'guzzlehttp/guzzle' => '^6.1',
      'php' => '~5.6|~7.0',
      'thadafinser/package-info' => '^1.0',
    ),
    'conflict' => 
    array (
      'browscap/browscap-php' => '<3,>=4',
      'donatj/phpuseragentparser' => '<0.5,>=1',
      'jenssegers/agent' => '<2.3,>=3',
      'mimmi20/wurfl' => '<1.6.4,>=2',
      'mobiledetect/mobiledetectlib' => '<2.7.5,>=3',
      'piwik/device-detector' => '<3.6,>=4',
      'sinergi/browser-detector' => '<6,>=7',
      'ua-parser/uap-php' => '<3.4.3,>=4',
      'whichbrowser/parser' => '<2.0.10,>=3',
      'woothee/woothee' => '<1.2,>=2',
      'zsxsoft/php-useragent' => '<1.2,>=2',
    ),
    'require-dev' => 
    array (
      'browscap/browscap-php' => '^3.0',
      'donatj/phpuseragentparser' => '^0.5.0',
      'endorphin-studio/browser-detector' => '^3.0',
      'friendsofphp/php-cs-fixer' => '^1.11',
      'handsetdetection/php-apikit' => '^4.1.10',
      'jenssegers/agent' => '^2.3',
      'mimmi20/wurfl' => '^1.7.1.1',
      'mobiledetect/mobiledetectlib' => '^2.7.5',
      'phpunit/phpunit' => '^5.6.8',
      'piwik/device-detector' => '^3.6',
      'sinergi/browser-detector' => '^6.0',
      'ua-parser/uap-php' => '^3.4.3',
      'whichbrowser/parser' => '^2.0.10',
      'woothee/woothee' => '^1.2',
      'zsxsoft/php-useragent' => '>=1.2,<1.4',
    ),
    'suggest' => 
    array (
      'browscap/browscap-php' => 'Needed to use Provider\\BrowscapPhp',
      'donatj/phpuseragentparser' => 'Needed to use Provider\\DonatjUAParser',
      'endorphin-studio/browser-detector' => 'Needed to use Provider\\Endorphin',
      'handsetdetection/php-apikit' => 'Needed to use Provider\\HandsetDetection',
      'jenssegers/agent' => 'Needed to use Provider\\JenssegersAgent',
      'mimmi20/wurfl' => 'Needed to use Provider\\Wurfl',
      'piwik/device-detector' => 'Needed to use Provider\\PiwikDeviceDetector',
      'sinergi/browser-detector' => 'Needed to use Provider\\SinergiBrowserDetector',
      'ua-parser/uap-php' => 'Needed to use Provider\\UAParser',
      'whichbrowser/parser' => 'Needed to use Provider\\WhichBrowser',
      'woothee/woothee' => 'Needed to use Provider\\Woothee',
      'zsxsoft/php-useragent' => 'Needed to use Provider\\Zsxsoft',
    ),
    'type' => 'library',
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'UserAgentParser\\' => 'src',
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'ThaDafinser',
        'email' => 'martin.keckeis1@gmail.com',
      ),
    ),
    'description' => 'UserAgent parsing done right http://useragent.mkf.solutions/',
    'keywords' => 
    array (
      0 => 'Browscap',
      1 => 'Device detection',
      2 => 'DeviceAtlas',
      3 => 'NeutrinoApiCom',
      4 => 'Rendering engine',
      5 => 'UA parser',
      6 => 'UdgerCom',
      7 => 'User agent detection',
      8 => 'User agent parser',
      9 => 'UserAgentApiCom',
      10 => 'UserAgentParser',
      11 => 'UserAgentStringCom',
      12 => 'WhatIsMyBrowserCom',
      13 => 'Wurfl',
      14 => 'bot detection',
      15 => 'browser',
      16 => 'detection',
      17 => 'device',
      18 => 'donatj',
      19 => 'engine',
      20 => 'get_browser',
      21 => 'jenssegers',
      22 => 'mobile detection',
      23 => 'mobile detector',
      24 => 'mobile device detection',
      25 => 'operating system',
      26 => 'os',
      27 => 'parser',
      28 => 'piwik',
      29 => 'sinergi',
      30 => 'sniffing',
      31 => 'ua',
      32 => 'ua-parser',
      33 => 'uaparser',
      34 => 'user agent',
      35 => 'useragent',
      36 => 'whichbrowser',
      37 => 'woothee',
    ),
    'time' => '2017-02-16T13:22:30+00:00',
  ),
  'whichbrowser/parser' => 
  array (
    'name' => 'whichbrowser/parser',
    'version' => 'v2.0.35',
    'source' => 
    array (
      'type' => 'git',
      'url' => 'https://github.com/WhichBrowser/Parser-PHP.git',
      'reference' => 'ad4fce96a17fc1bf6fc741b175de5e231bae7ebe',
    ),
    'dist' => 
    array (
      'type' => 'zip',
      'url' => 'https://api.github.com/repos/WhichBrowser/Parser-PHP/zipball/ad4fce96a17fc1bf6fc741b175de5e231bae7ebe',
      'reference' => 'ad4fce96a17fc1bf6fc741b175de5e231bae7ebe',
      'shasum' => '',
    ),
    'require' => 
    array (
      'php' => '>=5.4.0',
      'psr/cache' => '^1.0',
    ),
    'require-dev' => 
    array (
      'icomefromthenet/reverse-regex' => 'dev-master',
      'phpunit/php-code-coverage' => '^2.2|^3.0',
      'phpunit/phpunit' => '^4.0|^5.0',
      'satooshi/php-coveralls' => '^1.0',
      'squizlabs/php_codesniffer' => '2.5.*',
      'symfony/yaml' => '>=2.8',
    ),
    'suggest' => 
    array (
      'cache/array-adapter' => 'Allows testing of the caching functionality',
    ),
    'type' => 'library',
    'autoload' => 
    array (
      'psr-4' => 
      array (
        'WhichBrowser\\' => 
        array (
          0 => 'src/',
          1 => 'tests/src/',
        ),
      ),
    ),
    'notification-url' => 'https://packagist.org/downloads/',
    'license' => 
    array (
      0 => 'MIT',
    ),
    'authors' => 
    array (
      0 => 
      array (
        'name' => 'Niels Leenheer',
        'email' => 'niels@leenheer.nl',
        'role' => 'Developer',
      ),
    ),
    'description' => 'Useragent sniffing library for PHP',
    'homepage' => 'http://whichbrowser.net',
    'keywords' => 
    array (
      0 => 'browser',
      1 => 'sniffing',
      2 => 'ua',
      3 => 'useragent',
    ),
    'time' => '2018-08-08T10:00:00+00:00',
  ),
  '__root__' => 
  array (
    'name' => '__root__',
    'version' => 'dev-master',
    'version_normalized' => '9999999-dev',
    'require' => 
    array (
      'thadafinser/user-agent-parser' => '^2.0',
      'whichbrowser/parser' => '^2.0',
    ),
    'type' => 'library',
    'repositories' => 
    array (
      'packagist.org' => 
      array (
        'type' => 'composer',
        'url' => 'https?://repo.packagist.org',
        'allow_ssl_downgrade' => true,
      ),
    ),
    'minimum-stability' => 'stable',
  ),
);

    /**
     * 
     * @var string
     */
    private $name;
    
    /**
     * 
     * @param string $name
     * @throws PackageNotInstalledException
     */
    public function __construct($name)
    {
        $this->name = $name;
        
        if (! $this->isInstalled($name)) {
            throw new PackageNotInstalledException('Package "'.$name.'" is not installed through composer, or you installed it with the flag --no-scripts');
        }
    }
    
    /**
     * Check if the given package is installed
     * 
     * @return boolean
     */
    public static function isInstalled($name)
    {
        if (array_key_exists($name, self::PACKAGES)) {
            return true;
        }
        
        return false;
    }
    
    /**
     * @return mixed
     */
    public function getValue($key)
    {
        $values = $this->getValues();
        
        if(array_key_exists($key, $values)){
            return $values[$key];
        }
        
        return null;
    }
    
    /**
     * @return array
     */
    public function getValues()
    {
        if(array_key_exists($this->getName(), self::PACKAGES)){
            return self::PACKAGES[$this->getName()];
        }
        
        return [];
    }
    
    /**
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
    
    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->getValue('description');
    }
    
    /**
     * @return string
     */
    public function getVersion()
    {
        return $this->getValue('version');
    }
    
    /**
     * @return string
     */
    public function getType()
    {
        return $this->getValue('type');
    }
    
    /**
     * @return array
     */
    public function getKeywords()
    {
        return $this->getValue('keywords');
    }
    
    /**
     * @return string
     */
    public function getHomepage()
    {
        return $this->getValue('homepage');
    }
    
    /**
     * Return the release date of the current installed version
     * 
     * @return DateTime
     */
    public function getVersionReleaseDate()
    {
        return new DateTime($this->getValue('time'), new DateTimeZone('UTC'));
    }
    
    /**
     * @return string|array
     */
    public function getLicense()
    {
        return $this->getValue('license');
    }
    

    /**
     * @return array
     */
    public function getAuthors()
    {
        return $this->getValue('authors');
    }
}
